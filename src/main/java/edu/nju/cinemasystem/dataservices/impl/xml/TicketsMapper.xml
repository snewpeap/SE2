<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.nju.cinemasystem.dataservices.sale.ticket.TicketsMapper">
  <resultMap id="BaseResultMap" type="edu.nju.cinemasystem.data.po.Ticket">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="id" />
    <result column="arrangement_id" jdbcType="INTEGER" property="arrangementId" />
    <result column="seat_id" jdbcType="INTEGER" property="seatId" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="real_amount" jdbcType="REAL" property="realAmount" />
    <result column="orderID" jdbcType="BIGINT" property="orderid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, arrangement_id, seat_id, date, status, real_amount, orderID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tickets
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tickets
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.nju.cinemasystem.data.po.Ticket">
    insert into tickets (id, user_id, arrangement_id, 
      seat_id, date, status, 
      real_amount, orderID)
    values (#{id,jdbcType=INTEGER}, #{id,jdbcType=INTEGER}, #{arrangementId,jdbcType=INTEGER},
      #{seatId,jdbcType=INTEGER}, #{date,jdbcType=DATE}, #{status,jdbcType=TINYINT}, 
      #{realAmount,jdbcType=REAL}, #{orderid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="edu.nju.cinemasystem.data.po.Ticket">
    insert into tickets
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="id != null">
        user_id,
      </if>
      <if test="arrangementId != null">
        arrangement_id,
      </if>
      <if test="seatId != null">
        seat_id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="realAmount != null">
        real_amount,
      </if>
      <if test="orderid != null">
        orderID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="arrangementId != null">
        #{arrangementId,jdbcType=INTEGER},
      </if>
      <if test="seatId != null">
        #{seatId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="realAmount != null">
        #{realAmount,jdbcType=REAL},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.nju.cinemasystem.data.po.Ticket">
    update tickets
    <set>
      <if test="id != null">
        user_id = #{id,jdbcType=INTEGER},
      </if>
      <if test="arrangementId != null">
        arrangement_id = #{arrangementId,jdbcType=INTEGER},
      </if>
      <if test="seatId != null">
        seat_id = #{seatId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="realAmount != null">
        real_amount = #{realAmount,jdbcType=REAL},
      </if>
      <if test="orderid != null">
        orderID = #{orderid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.nju.cinemasystem.data.po.Ticket">
    update tickets
    set user_id = #{id,jdbcType=INTEGER},
      arrangement_id = #{arrangementId,jdbcType=INTEGER},
      seat_id = #{seatId,jdbcType=INTEGER},
      date = #{date,jdbcType=DATE},
      status = #{status,jdbcType=TINYINT},
      real_amount = #{realAmount,jdbcType=REAL},
      orderID = #{orderid,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>